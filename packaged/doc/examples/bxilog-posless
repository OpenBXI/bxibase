#!/usr/bin/env python

import sys
import bxi.base.log as bxilog
import bxi.base.posless as posless
import bxi.base.parserconf as bxiparserconf

if __name__ == '__main__':
    parser = posless.ArgumentParser(description='BXI Log Posless Example',
                                   formatter_class=bxiparserconf.FilteredHelpFormatter)

    # Do it first!
    bxiparserconf.addargs(parser, domain_name='bar')

    default = bxiparserconf.getdefaultvalue(parser, ['My Section'], 'variable',
                                            bxilog.getLogger('config'),
                                            'Default_Value',
                                            None,
                                            )
    parser.add_argument('--variable', default=default,
                        envvar='VAR',
                        help="Do something with variable. Current: %(default)s.")
    default = bxiparserconf.getdefaultvalue(parser, ['My Section'], 'stuff',
                                            bxilog.getLogger('config'),
                                            'Default_stuff',
                                            None,
                                            )
    parser.add_argument('--stuff', default=default,
                        help="Do something with stuff. Current: %(default)s.")
    
    args = parser.parse_args()
    
    bxilog.out("Value of variable: %s", args.variable)
    bxilog.out("Value of stuff: %s", args.stuff)
        
    one = bxilog.getLogger('one.logger')
    other = bxilog.getLogger('another.logger')
    history = bxilog.getLogger('history') 
    
    # This log will go only to the history according to the configuration
    history.out("This process just starts, arguments: %s", sys.argv)

    # All log below will be sent to all other handlers
    bxilog.out("Starting")
    one.info("Something")
    other.debug("Something else")
    
    one.error("Something wrong happened?")
    other.critical("And here, something even worse!")
    
    history.out("This process ends normally")