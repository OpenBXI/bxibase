#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
@copyright 2016  Bull S.A.S.  -  All rights reserved.
           This is not Free or Open Source software.
           Please contact Bull SAS for details about its license.
           Bull - Rue Jean JaurÃ¨s - B.P. 68 - 78340 Les Clayes-sous-Bois

Check order of BXI log messages
"""

import os
import sys
from datetime import datetime

import bxi.base.posless as posless
import bxi.base.parserconf as bxiparserconf
import bxi.base.log as logging


_LOGGER = logging.getLogger(os.path.basename(sys.argv[0]))

def _get_python_ts(timestamp):
    subsecond_idx = timestamp.rfind('.') + 1
    if len(timestamp) - subsecond_idx > 6:
        # Truncate to microseconds since Python cannot deal with something better
        timestamp = timestamp[:subsecond_idx + 6]
    return datetime.strptime(timestamp, '%Y%m%dT%H%M%S.%f')

def __main__():
    formatter = bxiparserconf.RawDescriptionFilteredHelpFormatter
    parser = posless.ArgumentParser(docstring=__doc__,
                                    formatter_class=formatter)
    bxiparserconf.addargs(parser)
    parser.add_argument("input", type=str, nargs='?', default='-',
                        help="The logging file to check. "
                             "Default is '-' for standard input")

    args = parser.parse_args()
    previous_timestamp = None
    line_nb = 1
    with open(args.input, 'r') if args.input != '-' else sys.stdin as input_file:
        for line in input_file:
            line_nb += 1
            if len(line.strip()) == 0:
                continue
            start = line.find('|', 0) + 1
            last = line.find('|', start)
            timestamp = line[start:last]
            if start == -1 or last == -1:
                _LOGGER.warning("Skipping unknown line: %s", line)
                continue
            _LOGGER.debug("Checking line %d: %s", line_nb, timestamp)
            if timestamp == "......................":
                continue
            if timestamp < previous_timestamp:
                py_ts = _get_python_ts(timestamp)
                py_prev_ts = _get_python_ts(previous_timestamp)
                _LOGGER.error("Line %d: %s < %s, difference: %s",
                              line_nb, timestamp, previous_timestamp,
                              py_prev_ts - py_ts)
            previous_timestamp = timestamp

if __name__ == '__main__':
    __main__()
