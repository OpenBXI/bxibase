/* -*- coding: utf-8 -*- */
/**
 * @file    template.h
 * @authors Jean-Noel Quintin <jean-noel.quintin@atos.net>
 * @copyright 201Y  Bull S.A.S.  -  All rights reserved.\n
 *         This is not Free or Open Source software.\n
 *         Please contact Bull SAS for details about its license.\n
 *         Bull - Rue Jean JaurÃ¨s - B.P. 68 - 78340 Les Clayes-sous-Bois
 * @brief   High Performance Logging Module
 *
 * ### Overview
 *
 * This module provides ...
 *
 * ### Basic usage
 *
 * ### Notes
 *
 *
 *
 * ### Full Running Examples
 */


/****************************************************************************************
 * Quickly, as a title, present the API of this component
 ***************************************************************************************/


#ifndef TEMPLATE_H_
#define TEMPLATE_H_


/****************************************************************************************
 * *********************************  HOWTO USE  ****************************************
 *
 * To be defined ...
 *
 * **************************************************************************************
 ***************************************************************************************/


//***************************************************************************************
//***********************************  Includes  ****************************************
//***************************************************************************************

// => only the necessary includes! => compatibility with CFFI


//***************************************************************************************
//***********************************  Defines  *****************************************
//***************************************************************************************


//***************************************************************************************
//************************************  Types  ******************************************
//***************************************************************************************

typedef struct something_s * something_p; // We almost always use pointers 
					  // on abstract data type -> do not expose
					  // the content of the struct unless it is 
					  // required.

typedef struct {} other_s;		  // If you need so, do it like this.


//***************************************************************************************
//********************************  Global Variables  ***********************************
//***************************************************************************************


//***************************************************************************************
//***********************************  Interface  ***************************************
//***************************************************************************************

// * What is the purpose of this function? 
int fct();

#endif /* TEMPLATE_H_ */
